# Generated by Django 4.2.1 on 2023-05-26 17:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('img', models.ImageField(default='AuthorImg/default.jpg', upload_to='AuthorImg', verbose_name='作者头像')),
                ('profile', models.TextField(default='这个人很懒，什么都没有留下~')),
            ],
        ),
        migrations.CreateModel(
            name='BookBasicInfo',
            fields=[
                ('bookID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('totScore', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('rateNumber', models.IntegerField(default=0)),
                ('author', models.CharField(max_length=128, null=True)),
                ('status', models.CharField(default='连载', max_length=64)),
                ('onShelf', models.BooleanField(default=True)),
                ('wordsCnt', models.IntegerField(default=0)),
                ('category', models.CharField(max_length=64)),
                ('profile', models.TextField(null=True)),
                ('img', models.ImageField(default='BookImg/default.jpg', upload_to='BookImg', verbose_name='图书封面')),
                ('collections', models.IntegerField()),
                ('isVIP', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=128)),
                ('bookID', models.IntegerField()),
                ('chapter', models.IntegerField()),
                ('timestamp', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=128)),
                ('passwd', models.CharField(max_length=56)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('userID', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('passwd', models.CharField(max_length=32)),
                ('email', models.EmailField(max_length=254)),
                ('img', models.ImageField(default='UserImg/user_img.jpg', upload_to='UserImg', verbose_name='上传头像')),
                ('gender', models.CharField(max_length=32, null=True)),
                ('nickname', models.CharField(max_length=128, null=True)),
                ('motto', models.CharField(max_length=128, null=True)),
                ('birth', models.DateField(null=True)),
                ('VIPDate', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=128)),
                ('bookID', models.IntegerField()),
                ('score', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'indexes': [models.Index(fields=['userID', 'bookID'], name='api_score_userID_9b22fa_idx')],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=128)),
                ('bookID', models.IntegerField()),
                ('chapter', models.IntegerField()),
                ('text', models.TextField()),
                ('timestamp', models.DateField(default='2023-05-24')),
                ('visible', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['userID', 'bookID', 'chapter'], name='api_comment_userID_8d97a0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Collections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=128)),
                ('bookID', models.IntegerField()),
            ],
            options={
                'indexes': [models.Index(fields=['userID', 'bookID'], name='api_collect_userID_22c15d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=128)),
                ('bookID', models.IntegerField()),
                ('chapter', models.IntegerField()),
            ],
            options={
                'indexes': [models.Index(fields=['userID', 'bookID'], name='api_bookmar_userID_6e5544_idx')],
            },
        ),
        migrations.CreateModel(
            name='BookContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookID', models.IntegerField()),
                ('chapter', models.IntegerField()),
                ('title', models.CharField(max_length=128, null=True)),
                ('text', models.TextField()),
            ],
            options={
                'indexes': [models.Index(fields=['bookID', 'chapter'], name='api_bookcon_bookID_1bf6b3_idx')],
            },
        ),
    ]
